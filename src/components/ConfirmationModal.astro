---
import Modal from "./Modal.astro";
import Button from "./Button.astro";
---

<Modal id={"confirmation-modal"} title={"Are you sure?"}>
  <div class="confirmation-modal">
    <p class="confirmation-modal__message"></p>
    <div class="confirmation-modal__buttons">
      <Button
        variant="ghost"
        class="confirmation-modal__buttons__button"
        id="cancel"
      >
        Cancel
      </Button>
      <Button class="confirmation-modal__buttons__button" id="confirm">
        Confirm
      </Button>
    </div>
  </div>
</Modal>

<style>
  .confirmation-modal {
    display: flex;
    flex-direction: column;
    gap: var(--gap-md);
  }
  .confirmation-modal__buttons {
    display: flex;
    justify-content: end;
    gap: var(--gap-sm);
  }
</style>

<script>
  import { confirmationModal } from "../lib/customEvents";

  const modal = document.getElementById(
    "confirmation-modal",
  )! as HTMLDialogElement;

  const description = modal.querySelector(
    ".confirmation-modal__message",
  )! as HTMLParagraphElement;

  const confirmButton = modal.querySelector("#confirm")! as HTMLButtonElement;
  const cancelButton = modal.querySelector("#cancel")! as HTMLButtonElement;

  // Listen to the trigger event, open the modal, add content & listeners
  document.addEventListener(confirmationModal.eventName, (event) => {
    const customEvent = event as CustomEvent;
    const message = customEvent.detail.message;
    const confirmEvent = customEvent.detail.confirmEvent;

    description.textContent = message;
    modal.showModal();
    confirmButton.focus();

    function handleConfirm() {
      document.dispatchEvent(new CustomEvent(confirmEvent));
      modal.close();
    }

    confirmButton.addEventListener("click", handleConfirm, { once: true });
    modal.addEventListener("close", () => {
      confirmButton.removeEventListener("click", handleConfirm);
    });
  });

  // Close the modal when the cancel button is clicked
  cancelButton.addEventListener("click", () => {
    modal.close();
  });
</script>
