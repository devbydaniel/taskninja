---
import { Icon } from "astro-icon/components";
import Button from "./Button.astro";

interface Props {
  id: string;
  title: string;
}

const { id, title } = Astro.props;
---

<dialog class="modal" id={id}>
  <div class="modal__close">
    <Button size="sm" square variant="ghost"><Icon name="mdi:close" /></Button>
  </div>
  <div class="modal__content">
    <div class="modal__header">
      {title && <h2 class="modal__title">{title}</h2>}
    </div>
    <div class="modal__body">
      <slot />
    </div>
  </div>
</dialog>

<style>
  .modal::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }

  .modal {
    position: relative;
    border-radius: var(--border-radius);
    border: 1px solid var(--color-text-muted);
    background: var(--background-raised);
    z-index: 1000;
    width: 90%;
    max-width: 30rem;
    max-height: 90%;
    overflow-y: auto;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1);
    padding: var(--padding-y) var(--padding-x);
  }

  .modal__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--padding-y) 0;
  }

  .modal__title {
    margin: 0;
    font-size: var(--font-size);
  }

  .modal__body {
    padding: var(--padding-y) 0;
  }

  .modal__close {
    position: absolute;
    top: var(--gap-sm);
    right: var(--gap-sm);
    border: none;
    background: none;
  }
</style>

<script define:vars={{ id }} is:inline>
  const modal = document.getElementById(id);
  const closeButton = modal?.querySelector(".modal__close");

  // Close the modal when the close button is clicked
  closeButton?.addEventListener("click", () => {
    modal.close();
  });

  // Close the modal when the backdrop is clicked
  modal?.addEventListener("click", (event) => {
    if (event.target === modal) {
      modal.close();
    }
  });
</script>
